#include<stdio.h>
#include<stdlib.h>
#define MAXQUEUE 4

typedef struct{
    int count;
    int front;
    int rear;
    int item[MAXQUEUE];
    } QUEUE;
QUEUE antrean;

void inisialisasi(QUEUE *Q){
    Q->count=0;
    Q->front=0;
    Q->rear=0;
    }

int isEmpty(QUEUE *Q){
    int hasil=0;
    if (Q->count==0){
    hasil=1;
    }return hasil;
    }
    
 int isFull(QUEUE *Q){
    int hasil=0;
    if (Q->count==MAXQUEUE){
    hasil=1;
    }return hasil;
}

void insert(QUEUE *Q, int data){
    if(isFull(&antrean)==1){printf("antrean sudah penuh");}
    else{
        Q->item[Q->rear]=data;
        Q->rear=(Q->rear+=1) % MAXQUEUE;
        ++(Q->count);
    }
}

void hapus(QUEUE *Q){
    if(isEmpty(&antrean)==1){printf("antrean masih kosong");}
    else{
        --(Q->count);
        Q->item[Q->front]=0;
        Q->front=(Q->front+=1) % MAXQUEUE;
    }
}

void printQueue(QUEUE *Q){
    printf("isi antrean : ");
    for(int i=(Q->front);i<MAXQUEUE;i++){
        printf("%d ", Q->item[i]);
    }
    printf("\n");
}

int main(){
inisialisasi(&antrean);
// Insert pasien pertama //
printf("masukkan 108\n");
insert(&antrean, 108);
printQueue(&antrean);
// Insert pasien kedua //
printf("masukkan 109\n");
insert(&antrean, 109);
printQueue(&antrean);
// Insert pasien ketiga //
printf("masukkan 110\n");
insert(&antrean, 110);
printQueue(&antrean);
//insert pasien keempat /
printf("masukkan 111\n");
insert(&antrean, 111);
printQueue(&antrean);
// Hapus pasien pertama //
printf("Menghapus 108 dari antrian\n");
hapus(&antrean);
printQueue(&antrean);
// Insert pasien kelima //
printf("masukkan 112\n");
insert(&antrean, 112);
printQueue(&antrean);
// contoh
// printf("masukan xx\n");
// insert(&abcde, yy);
// printQueue(&12345);

return 0;
}
